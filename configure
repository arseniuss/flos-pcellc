#!/bin/sh

# when any command fails, the shell immediately exists
set -e

progname="$0"

. ./config.inc

setvar() {
    local name="$1"
    local defval="$2"

    ! test -z "$(eval echo \$$name)" && eval export $name || eval export $name=\"$defval\"
}

setechovar() {
    setvar "$1" "$2"
    eval echo \"\$$1\"
}

make_local() {
    (
        cd "$1";

        if [ ! -f config.mk ]; then
            ./configure
        fi
        make
    )
}

setup_local() {
    DEPLIBS_COUNT=$(echo "$DEPLIBS" | wc -w)

    mkdir -p deps

    i=0
    while [ "$i" -lt $DEPLIBS_COUNT ]; do
        i=$(( i + 1 ))

        name=$(echo "$DEPLIBS" | cut -d\  -f$i)
        echo "Setting dependency library $name ..."

        url=$(eval echo \"\$${name}_URL\")
        if [ -z "$url" ]; then
            echo "error: URL is not set for library $name" > /dev/stderr
            continue
        fi

        dir=$(eval echo \"\$${name}_DIR\")
        if [ -z "$dir" ]; then
            echo "error: archive directory is not set for library $name" > /dev/stderr
            continue
        fi

        if [ ! -f deps/$name.zip ]; then
            echo "Downloading $name.zip ..."

            wget -nc "$url" -P deps -O deps/$name.zip || true
        fi

        if [ ! -d deps/$dir/ ]; then
            echo "Unzipping $name ..."

            mkdir deps/$dir/
            unzip -q deps/$name.zip -d deps
        fi

        make_local "deps/$dir/"

        if [ -d deps/$dir/include ]; then
            INCLUDES="$INCLUDES deps/$dir/include"
        fi
    done
}

include_local() {
    local config_file="$1"

    DEPLIBS_COUNT=$(echo "$DEPLIBS" | wc -w)

    i=0
    while [ "$i" -lt $DEPLIBS_COUNT ]; do
        i=$(( i + 1 ))

        name=$(echo "$DEPLIBS" | cut -d\  -f$i)
        dir=$(eval echo \"\$${name}_DIR\")

        [ -z "$dir" ] && continue;

        if [ -d deps/$dir/include ]; then
            echo "${name}_INCLUDE=deps/$dir/include" >> $config_file
        fi

        if [ -d deps/$dir/lib ]; then
            echo "${name}_LIB=deps/$dir/lib" >> $config_file
        fi
    done  
}

while [ $# -gt 0 ]; do
    case "$1" in
    --local)
        do_local_setup=1
        ;;
    --srcdir=*)
        srcdir="${1#*=}"
        ;;
    --prefix=*)
        prefix="${1#*=}"
        ;;
    --exec-prefix=*)
        exec_prefix="${1#*=}"
        ;;
    --bindir=*)
        bindir="${1#*=}"
        ;;
    --sbindir=*)
        sbindir="${1#*=}"
        ;;
    --sysconfdir=*)
        sysconfdir="${1#*=}"
        ;;
    --localstatedir=*)
        localstatedir="${1#*=}"
        ;;
    --runstatedir=*)
        runstatedir="${1#*=}"
        ;;
    --libdir=*)
        libdir="${1#*=}"
        ;;
    --includedir=*)
        includedir="${1#*=}"
        ;;
    --datarootdir=*)
        datarootdir="${1#*=}"
        ;;
    --datadir=*)
        datadir="${1#*=}"
        ;;
    --docdir=*)
        docdir="${1#*=}"
        ;;

    *=*)
        eval ${1%%=*}=\"${1#*=}\"
        ;;
    --*|-*)
        printf "%s: illegal option: %s\n" "$progname" "$1"
        exit 1
        ;;
    *)
        printf "%s: unrecognised argument: %s\n" "$progname" "$1"
        exit 1
        ;;
    esac
    shift
done

#
# Base directories
#
setvar srcdir .
setvar prefix .
setvar exec_prefix "$prefix"
setvar datarootdir "$prefix/share"
setvar CFLAGS "-Wall -Wshadow -Wextra"
setvar LDFLAGS
setvar LIBS
setvar INCLUDES

# Append defaults
CFLAGS="$CFLAGS -std=c99 -DVERSION=\"$version\""
LDFLAGS="$LDFLAGS "

if [ "$do_local_setup" -eq 1 ]; then
    setup_local
fi

cat <<EOF > $srcdir/config.mk
PACKAGE = $package
VERSION = $version

AR = $(setechovar AR ar)
CC = $(setechovar CC cc)
COV = $(setechovar COV gcov)
LD = $(setechovar LD cc)
PP = $(setechovar PP cpp)
PROVE = $(setechovar PROVE prove)

CFLAGS = $CFLAGS
LDFLAGS = $LDFLAGS
LIBS = $LIBS

EOF

if [ "$do_local_setup" -eq 1 ]; then
    include_local "$srcdir/config.mk"
fi

cat<<EOF >> $srcdir/config.mk

root = $(setechovar ROOT /)

srcdir = $(setechovar srcdir .)
builddir = $(setechovar builddir build)

prefix = $prefix
exec_prefix = $exec_prefix

bindir = $(setechovar bindir "$exec_prefix/bin")
sbindir = $(setechovar sbindir "$exec_prefix/sbin")
sysconfdir = $(setechovar sysconfdir "$prefix/etc")
localstatedir = $(setechovar localstatedir "$prefix/var")
runstatedir = $(setechovar runstatedir "$prefix/run")
libdir = $(setechovar libdir "$exec_prefix/lib")
includedir = $(setechovar includedir "$prefix/include")
datarootdir = $datarootdir
datadir = $(setechovar datadir "$datarootdir")
docdir = $(setechovar docdir "$datarootdir/doc/$package")
EOF
